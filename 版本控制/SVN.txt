

SVN
————————————06/02/2017
SVN为程序开发团队常用的代码管理，版本控制软件
工具/原料 （windows下）
TortoiseSVN SVN安装包
subversion （使用者的电脑不需要）
LanguagePack
————————————————————————————————————————————————————————————svn安装与其服务器搭建
先安装TortoiseSVN，再安装TortoiseSVN的汉化包anguagePack。再安装Setup-Subversion，再右键TortoiseSVN
配置Subversion的汉化版。最后在服务器上创建文件夹（配置服务器），创建版本库。
1.SVN汉化界面配置.选择TortoiseSVN后点击settings弹出界面，Genneral右侧Language选择"中文(简体)"，点击应用确定即可
2.配置服务器，在根目录创建一文件夹ejsvn，进入文件夹，在文件夹空白位置单机右键，选择TortoiseSVN后点击"在此创建版本库"
3.在E:\ejsvn\conf目录下找到svnserve.conf，用记事本打开，找到
# password-db = passwd，将前面的#删除，保存关闭
同一目录下找到passwd，用记事本打开，找到
# harry = harryssecret
# sally = sallyssecret
删除前面的#号，这里为用户的账号管理，账号=密码，注意别留空格；保存关闭
4.启用SVN服务，按下windows+R键，输入cmd进入命令界面，输入svnserve -d -r e:\ejsvn;e:\ejsvn为你服务器目录；注意：注意：这是临时打开的服务，命令执行后不能关闭窗口；也可将SVN服务设为自动启动
sc create svnservice binpath= “c:Program Files\Subversion\bin\svnserve.exe –service -r e:svn”
5.测试是否安装成功，创建一文件夹，选择文件夹单击右键SVN 检出；svn://192.168.0.108，此有服务器IP地址，输入账号密码，即第六步配置的账号密码；
如显示”完毕 于版本0“即为安装成功，
6.如果出现”期望格式在1~4之间，发现格式6“，则为TortoiseSVN与setup-subversion版本同，可下载相同版本安装，也可在命令界面进入你TortoiseSVN的安装Bin文件夹c: c:\Program Files\TortoiseSvn\bin 然后创建数据库，注意删除之前手动创建的，命令：svnadmin create e:\ejsvn
————————————————————————————————————————————————————————————使用者User 
用户客户端搭建
安装:TortoiseSVN 并汉化，使用IP：svn://192.168.0.108 和预设的密码（即账号）登陆即可。
创建本地仓库，检出，提交，版本回滚，合并等操作。

——————————SVN中检出(check out) 和 导出(export) 的区别主要有如下几条：

check out跟check in对应，export跟import对应。
check out导出获得文件后，导出的文件仍处于SVN版本控制中，与版本库保持关联，比如你可以进行Svn Update或者Svn Commit操作。同时导出文件夹下有一个.svn的隐藏文件夹，存储着一些版本的元数据信息。

export 简单导出一个版本的数据，导出的文件脱离SVN版本控制，修改后无进行Update和Commit操作。导出文件夹下没有.svn目录。

———————————————————————————————————————————————————————————— SVN常用命令
查看修改的文件记录
svn cat -- 显示特定版本的某文件内容。

svn list -- 显示一个目录或某一版本存在的文件列表。

svn log -- 显示svn 的版本log，含作者、日期、路径等。

svn diff -- 显示特定修改的行级详细信息。
——————————
常用命令
svn add file|dir -- 添加文件或整个目录

svn checkout -- 获取svn代码

svn commit  -- 提交本地修改代码

svn status    -- 查看本地修改代码情况：修改的或本地独有的文件详细信息

svn merge   -- 合并svn和本地代码

svn revert   -- 撤销本地修改代码

svn resolve -- 合并冲突代码

svn help [command] -- 查看svn帮助，或特定命令帮助

——————————
svn diff个性化定制
svn配置文件: ~/.subversion/config

修改~/.subversion/config，找到如下配置行：

# diff-cmd = diff_program (diff, gdiff, etc.)
将上面那个脚本的路径添加进去就行，修改为

diff-cmd = /usr/local/bin/diffwrap.sh  #绝对路径
这样svn diff命令就会默认使用vimdiff比较文件。
——————————
list示例：
svn list http://svn.test.com/svn     #查看目录中的文件。
svn list -v http://svn.test.com/svn  #查看详细的目录的信息(修订人,版本号,文件大小等)。
svn list [-v]                        #查看当前当前工作拷贝的版本库URL。
——————————
cat示例：
svn cat -r 4 test.c     #查看版本4中的文件test.c的内容,不进行比较。
——————————
diff示例：
svn diff               #什么都不加，会坚持本地代码和缓存在本地.svn目录下的信息的不同;信息太多，没啥用处。
svn diff -r 3          #比较你的本地代码和版本号为3的所有文件的不同。
svn diff -r 3 text.c   #比较你的本地代码和版本号为3的text.c文件的不同。
svn diff -r 5:6        #比较版本5和版本6之间所有文件的不同。
svn diff -r 5:6 text.c #比较版本5和版本6之间的text.c文件的变化。
svn diff -c 6 test.c    #比较版本5和版本6之间的text.c文件的变化。
——————————
log示例：
svn log         #什么都不加会显示所有版本commit的日志信息:版本、作者、日期、comment。
svn log -r 4:20 #只看版本4到版本20的日志信息，顺序显示。
svn log -r 20:5 #显示版本20到4之间的日志信息，逆序显示。
svn log test.c  #查看文件test.c的日志修改信息。
svn log -r 8 -v #显示版本8的详细修改日志，包括修改的所有文件列表信息。
svn log -r 8 -v -q   #显示版本8的详细提交日志，不包括comment。
svn log -v -r 88:866 #显示从版本88到版本866之间，当前代码目录下所有变更的详细信息 。
svn log -v dir  #查看目录的日志修改信息,需要加v。
svn log http://foo.com/svn/trunk/code/  #显示代码目录的日志信息。
——————————
diffwrap.sh文件
#! /bin/bash

# for svn diff: 修改~/.subversion/config，找到如下配置行：
# diff-cmd = diff_program (diff, gdiff, etc.)
# diff-cmd = ~/bin/diffwrap.sh

# 参数大于5时，去掉前5个参数；参数小于5，失败，什么也不做
shift 5

# 使用vimdiff比较
vimdiff "$@"
——————————
vimdiff的常用命令
★ 跳转到下一个diff点：

请使用 ]c 命令

★ 跳转到前一个diff点：
请使用 [c 命令
如果在命令前加上数字的话，可以跳过一个或数个差异点，从而实现跳的更远。比如如果在位于第一个差异点的行输入"2]c"，将越过下一个差异点，跳转到第 三个差异点。

★ 文件比较的最终目的之一就是合并，以消除差异。如果希望把一个差异点中当前文件的内容复制到另一个文件里，可以使用命令：
dp （diff "put"）
★ 如果希望把另一个文件的内容复制到当前行中，可以使用命令：
do (diff "get"，之所以不用dg，是因为dg已经被另一个命令占用了，所以用了diff "obtain")
★ 如果希望手工修改某一行，可以使用通常的vim操作。如果希望在两个文件之间来回跳转，可以用下列命令序列：Ctrl-w, w
★ 在修改一个或两个文件之后，vimdiff会试图自动来重新比较文件，以便实时地反映比较结果。但是有时候会处理失败，这个时候就需要手工来刷新。
:diffupdate
★ 如果希望撤销修改，可以和平常用vim编辑一样，直接<ESC>, u  
★ zo （folding open）打开折叠代码。之所以用z这个字母，是因为它看上去比较像折叠着的纸:)

★ zc （folding close）重新折叠起来。

★ 补充一条： 如果想交换上/下、左/右两个分隔窗口的位置，可以使用 ctrl-w,r 命令
——————————
